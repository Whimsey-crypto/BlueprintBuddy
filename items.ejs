<%
/**
 * TT Tycoon Crafting Calculator - Items Database
 * This file contains all item definitions used in crafting recipes
 * Items can be fetched from the API: https://ttycoon.eu/api/v1/serverdata/iteminfo?id=ITEM_ID
 */

// Basic resources
const basicResources = [
  { id: "sand", name: "Sand", weight: 0.8, category: "resource", icon: "🏝️" },
  { id: "gravel", name: "Gravel", weight: 1.2, category: "resource", icon: "🪨" },
  { id: "clay", name: "Clay", weight: 0.9, category: "resource", icon: "🧱" },
  { id: "log", name: "Log", weight: 3.0, category: "resource", icon: "🪵" },
  { id: "iron_ore", name: "Iron Ore", weight: 2.5, category: "resource", icon: "⛏️" },
  { id: "copper_ore", name: "Copper Ore", weight: 2.2, category: "resource", icon: "🔶" },
  { id: "bauxite", name: "Bauxite", weight: 1.8, category: "resource", icon: "🔷" },
  { id: "crude_oil", name: "Crude Oil", weight: 1.5, category: "resource", icon: "🛢️" }
];

// Processed materials
const processedMaterials = [
  { id: "crafted_concrete", name: "Concrete", weight: 1.5, category: "material", icon: "🧊" },
  { id: "crafted_lumber", name: "Lumber", weight: 2.0, category: "material", icon: "🪚" },
  { id: "crafted_brick", name: "Brick", weight: 1.2, category: "material", icon: "🧱" },
  { id: "crafted_iron_ingot", name: "Iron Ingot", weight: 1.5, category: "material", icon: "🔨" },
  { id: "crafted_copper_ingot", name: "Copper Ingot", weight: 1.3, category: "material", icon: "🔶" },
  { id: "crafted_aluminum_ingot", name: "Aluminum Ingot", weight: 0.9, category: "material", icon: "🔷" },
  { id: "crafted_plastic", name: "Plastic", weight: 0.7, category: "material", icon: "💠" },
  { id: "crafted_steel", name: "Steel", weight: 2.0, category: "material", icon: "⚙️" }
];

// Finished products
const finishedProducts = [
  { id: "crafted_table", name: "Table", weight: 12.0, category: "furniture", icon: "🪑" },
  { id: "crafted_chair", name: "Chair", weight: 5.0, category: "furniture", icon: "🪑" },
  { id: "crafted_fence", name: "Fence", weight: 8.0, category: "construction", icon: "🏗️" },
  { id: "crafted_engine", name: "Engine", weight: 25.0, category: "automotive", icon: "🔧" },
  { id: "crafted_computer", name: "Computer", weight: 3.5, category: "electronics", icon: "💻" }
];

// Combine all items into one collection for easy access
const allItems = [...basicResources, ...processedMaterials, ...finishedProducts];

/**
 * Helper function to find an item by its ID
 * @param {string} id - The item ID to search for
 * @returns {Object|null} - The item object or null if not found
 */
function findItemById(id) {
  return allItems.find(item => item.id === id) || null;
}

/**
 * Helper function to get items by category
 * @param {string} category - The category to filter by
 * @returns {Array} - Array of items in the specified category
 */
function getItemsByCategory(category) {
  return allItems.filter(item => item.category === category);
}

/**
 * Function to fetch item data from the API
 * @param {string} itemId - The ID of the item to fetch
 * @returns {Promise} - Promise resolving to the item data
 */
async function fetchItemInfo(itemId) {
  try {
    const response = await fetch(`https://ttycoon.eu/api/v1/serverdata/iteminfo?id=${itemId}`);
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(`Error fetching item info for ${itemId}:`, error);
    return null;
  }
}

/**
 * Get the user's trailer capacity based on trailer type
 * @param {string} trailerId - The ID of the trailer
 * @returns {number} - The capacity in kg
 */
async function getTrailerCapacity(trailerId) {
  try {
    const response = await fetch('https://ttycoon.eu/api/v1/serverdata/trailerconfig');
    const trailers = await response.json();
    
    // Find the matching trailer or return default capacity
    const trailer = trailers.find(t => t.id === trailerId);
    return trailer ? trailer.capacity : 300;
  } catch (error) {
    console.error('Error fetching trailer configs:', error);
    return 300; // Default capacity as fallback
  }
}

// Export all the needed functions and data
%>

<!-- Make data and functions available to the rest of the application -->
<script>
  // Expose the item data for use in the main application
  window.ttItems = {
    allItems: <%- JSON.stringify(allItems) %>,
    findItemById: <%- findItemById.toString() %>,
    getItemsByCategory: <%- getItemsByCategory.toString() %>,
    fetchItemInfo: <%- fetchItemInfo.toString() %>,
    getTrailerCapacity: <%- getTrailerCapacity.toString() %>
  };
</script>